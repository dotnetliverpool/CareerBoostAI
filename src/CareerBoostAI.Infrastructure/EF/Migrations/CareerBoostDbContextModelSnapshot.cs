// <auto-generated />
using System;
using CareerBoostAI.Infrastructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareerBoostAI.Infrastructure.EF.Migrations
{
    [DbContext(typeof(CareerBoostDbContext))]
    partial class CareerBoostDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CareerBoostAI")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Candidates", "CareerBoostAI");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Cv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneCountryCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("Varchar(4");

                    b.Property<int>("PhoneNumber")
                        .HasMaxLength(14)
                        .HasColumnType("Varchar(14");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("Cvs", "CareerBoostAI");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.CvSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CvId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SequenceIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CvId");

                    b.ToTable("CvSection", "CareerBoostAI");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.CvSectionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("varchar(3000)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("SequenceIndex")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("CvSectionItem", "CareerBoostAI");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("Email", "CareerBoostAI");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("Varchar(4");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("Varchar(14");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("PhoneNumber", "CareerBoostAI");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Cv", b =>
                {
                    b.HasOne("CareerBoostAI.Infrastructure.EF.Models.Candidate", "Candidate")
                        .WithMany("Cvs")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.CvSection", b =>
                {
                    b.HasOne("CareerBoostAI.Infrastructure.EF.Models.Cv", "Cv")
                        .WithMany("Sections")
                        .HasForeignKey("CvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cv");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.CvSectionItem", b =>
                {
                    b.HasOne("CareerBoostAI.Infrastructure.EF.Models.CvSection", "Section")
                        .WithMany("SectionItems")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Email", b =>
                {
                    b.HasOne("CareerBoostAI.Infrastructure.EF.Models.Candidate", null)
                        .WithMany("Emails")
                        .HasForeignKey("CandidateId");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.PhoneNumber", b =>
                {
                    b.HasOne("CareerBoostAI.Infrastructure.EF.Models.Candidate", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("CandidateId");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Candidate", b =>
                {
                    b.Navigation("Cvs");

                    b.Navigation("Emails");

                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.Cv", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("CareerBoostAI.Infrastructure.EF.Models.CvSection", b =>
                {
                    b.Navigation("SectionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
