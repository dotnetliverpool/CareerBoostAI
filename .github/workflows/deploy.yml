name: Build, Test and Deploy the CareerBoostAI Api to Azure Functions

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/*.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_PUBLISH_OUTPUT_DIR: .\myapp
  AZURE_FUNCTION_APP_NAME: CareerBoostAI-function-app
  FUNCTION_PROJECT_PATH: .\src\CareerBoostAI.Api\CareerBoostAI.Api.csproj
  ROOT_SOLUTION_PATH: .
  DOTNET_VERSION: '8.x'
  

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Get the latest source code commit
        uses: actions/checkout@v4

      - name: Build .Net 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore solution dependencies
        run: dotnet restore CareerBoostAI.sln
        working-directory: ${{ env.ROOT_SOLUTION_PATH }}
        
      - name: Build for Testing
        run: dotnet build --no-restore
        working-directory: ${{ env.ROOT_SOLUTION_PATH }}
        
      - name: Run all tests
        run: dotnet test --no-build --verbosity normal
        working-directory: ${{ env.ROOT_SOLUTION_PATH }}

      - name: Build for release
        run: dotnet build --configuration Release

      - name: Create output directory
        run: |
          if (!(Test-Path ${{ env.DOTNET_PUBLISH_OUTPUT_DIR }})) { mkdir ${{ env.DOTNET_PUBLISH_OUTPUT_DIR }} }


      - name: publish release artifact
        run: dotnet publish -c Release -o ${{ env.DOTNET_PUBLISH_OUTPUT_DIR }}
        
      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef
        
      - name: Update Database
        shell: powershell
        run: |
          dotnet ef database update --startup-project ${{ env.FUNCTION_PROJECT_PATH }} --project .\src\CareerBoostAI.Infrastructure\CareerBoostAI.Infrastructure.csproj --context CareerBoostReadDbContext --connection ${{ secrets.MYSQL_CONNECTION_STRING }}
        working-directory: ${{ env.ROOT_SOLUTION_PATH }}
      
      
      - name: Login to Azure
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Deploy App Settings to Azure Function
        shell: powershell
        run: |
            $resourceGroup = "${{ secrets.AZURE_RESOURCE_GROUP }}"
            $functionAppName = "${{ env.AZURE_FUNCTION_APP_NAME }}"
            
            # Create an array of key-value pairs for all settings
            $appSettings = @(
              "FUNCTIONS_WORKER_RUNTIME=dotnet-isolated"
              "AZURE_FUNCTIONS_ENVIRONMENT=Production"
            
              # Database Settings
              "Database:MySql:ConnectionString=${{ secrets.MYSQL_CONNECTION_STRING }}"
              "Database:MySql:ServerVersion=8.0.24"
            
              # Storage Settings
              "Storage:Azure:ConnectionString=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}"
            
              # AI Settings
              "AI:OpenAi:ModelId=${{ vars.OPENAI_MODEL_ID }}"
              "AI:OpenAi:EndpointUrl=${{ vars.OPENAI_ENDPOINT_URL }}"
              "AI:OpenAi:ApiKey=${{ secrets.OPENAI_API_KEY }}"
            
              # Email Settings
              "Email:Default:DefaultFromAddress=${{ secrets.EMAIL_FROM_ADDRESS }}"
              "Email:Default:Host=${{ secrets.EMAIL_HOST }}"
              "Email:Default:Port=${{ secrets.EMAIL_PORT }}"
              "Email:Default:Username=${{ secrets.EMAIL_USERNAME }}"
              "Email:Default:Password=${{ secrets.EMAIL_PASSWORD }}"
              "Email:Default:DefaultToAddresses=${{ secrets.EMAIL_DEFAULT_TO_ADDRESSES }}"
            )
          
            $appSettingsString = $appSettings -join " "
          
            az functionapp config appsettings set --name 
                $functionAppName --resource-group 
                $resourceGroup --settings $appSettingsString


 


      - name: Deploy to Azure Function App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_FUNCTION_APP_NAME }}
          package: ${{ env.DOTNET_PUBLISH_OUTPUT_DIR }}